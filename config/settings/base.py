"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-67!qeycq0x@bq0_&d!uh1a$*-d8en29_pu7z=(gqya+bq&!-qt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False#True

ALLOWED_HOSTS = [
    '43.203.89.143',
    'ntk.ai.kr',
    'www.ntk.ai.kr',
]


# Application definition


STATICFILES_DIRS = [
     BASE_DIR / 'static',
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.sites',  # ✅ 꼭 필요
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',  # ✅ Google 제공자

    'toolhub',
    'django.contrib.humanize',
    #'toolhub.apps.ToolhubConfig',
    'accounts',
    'biblecheck',
    'common.apps.CommonConfig',
    'ntkintro',
    'linkn',
    'biblecheck_youth',
    'myprofile',
    'carded',
    'randomgen',
    'averager',
    'passgen',
    'ndate', 'nip', 'nlorem', 'nword',
    'nsys',
    'nbase64', 'nunit','nhash',
    'nbooks',
    'agecalc',
    'centurycalc',
    'conspiracy',
    'dischargecalc',
    'worldtime',
    'visitorstats',
    'bmicalc',
    'idgen',
    'pomodoro',

    'exchanger',

    'scripter',

    "weekday",
    "dailyq",

    'progfunny',
    'unitlog',

    'nickgen',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',  # ✅ 추가
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'visitorstats.middleware.VisitMiddleware',

]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],

            'builtins': [
                'django.template.defaultfilters',  # abs, date, join 등 내장 필터
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/
"""
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'
"""


LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
# base.py
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

APPEND_SLASH = True

##about all auth

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

#LOGIN_REDIRECT_URL = '/'
ACCOUNT_LOGOUT_REDIRECT_URL = '/'

# 이메일을 유저네임처럼 사용하게 설정 (선택사항)
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_VERIFICATION = 'none'  # 이메일 인증 생략 (선택 가능)

# settings.py

# 로그인 페이지 URL 이름 (혹은 절대 경로)
LOGIN_URL = '/login/'

# 로그인 성공 후 이동할 기본 페이지
LOGIN_REDIRECT_URL = '/tools/'



# allauth: 소셜로그인 프로바이더 옵션
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        # 로그인 시 이메일을 반드시 가져오도록 강제하려면:
        # 'EMAIL_VERIFICATION': 'mandatory',
    }
}
